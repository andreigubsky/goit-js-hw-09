{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["// 1. Оголоси поза будь-якими функціями об’єкт formData з полями email та message,\n// які спочатку мають порожні рядки як значення: { email: \"\", message: \"\" }.\nlet formData = {\n  email: '',\n  message: '',\n};\nconst form = document.querySelector('.feedback-form');\nconst localStorageKey = 'feedback-form-state';\n\n// 3. При завантаженні сторінки перевір, чи є дані у локальному сховищі.\n// Якщо так, використовуй їх для заповнення форми та об'єкта formData.\n// Якщо ні, залиш поля форми порожніми.\nconst emailLocal = document.querySelector('.feedback-form input[type=\"email\"]');\nconst messageLocal = document.querySelector('.feedback-form [name=\"message\"]');\nconst savedItem = localStorage.getItem(localStorageKey);\n\nif (savedItem) {\n  const parsedItem = JSON.parse(savedItem);\n\n  formData = {...parsedItem};\n  emailLocal.value = parsedItem.email;\n  messageLocal.value = parsedItem.message;\n}\n\n// 2. Використовуй метод делегування для відстеження змін\n// у формі через подію input. Зберігай актуальні дані\n// з полів email та message у formData та записуй цей об’єкт у локальне сховище.\n// Використовуй ключ \"feedback-form-state\" для зберігання даних у сховищі.\n\nform.addEventListener('input', event => {\n  if (event.target.name === 'email') {\n    formData.email = event.target.value;\n  } else {\n    formData.message = event.target.value;\n  }\n  localStorage.setItem(localStorageKey, JSON.stringify(formData));\n});\n\n//4.1 Перед відправленням форми переконайся,\n// що обидва поля форми заповнені.\n// Якщо будь-яке з полів (властивостей об’єкта\n// formData) порожнє, показуй сповіщення\n// з текстом «Fill please all fields».\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  if (formData.email === '' || formData.message === '') {\n    alert('Fill please all fields');\n  } else {\n    // 4.2 Якщо всі поля заповнені, виведи у консоль об’єкт formData\n    // з актуальними значеннями, очисти локальне сховище,\n    // об’єкт formData і поля форми.\n    console.log(formData);\n    localStorage.removeItem(localStorageKey);\n    formData = {\n      email: '',\n      message: '',\n    };\n    form.reset();\n  }\n});"],"names":["formData","form","localStorageKey","emailLocal","messageLocal","savedItem","parsedItem","event"],"mappings":"wFAEA,IAAIA,EAAW,CACb,MAAO,GACP,QAAS,EACX,EACA,MAAMC,EAAO,SAAS,cAAc,gBAAgB,EAC9CC,EAAkB,sBAKlBC,EAAa,SAAS,cAAc,oCAAoC,EACxEC,EAAe,SAAS,cAAc,iCAAiC,EACvEC,EAAY,aAAa,QAAQH,CAAe,EAEtD,GAAIG,EAAW,CACb,MAAMC,EAAa,KAAK,MAAMD,CAAS,EAEvCL,EAAW,CAAC,GAAGM,CAAU,EACzBH,EAAW,MAAQG,EAAW,MAC9BF,EAAa,MAAQE,EAAW,OAClC,CAOAL,EAAK,iBAAiB,QAASM,GAAS,CAClCA,EAAM,OAAO,OAAS,QACxBP,EAAS,MAAQO,EAAM,OAAO,MAE9BP,EAAS,QAAUO,EAAM,OAAO,MAElC,aAAa,QAAQL,EAAiB,KAAK,UAAUF,CAAQ,CAAC,CAChE,CAAC,EAQDC,EAAK,iBAAiB,SAAUM,GAAS,CACvCA,EAAM,eAAc,EAChBP,EAAS,QAAU,IAAMA,EAAS,UAAY,GAChD,MAAM,wBAAwB,GAK9B,QAAQ,IAAIA,CAAQ,EACpB,aAAa,WAAWE,CAAe,EACvCF,EAAW,CACT,MAAO,GACP,QAAS,EACf,EACIC,EAAK,MAAK,EAEd,CAAC"}